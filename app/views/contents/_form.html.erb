<% @tab_active = "inline-block px-4 py-3 text-white bg-blue-600 rounded-lg active" %>
<% @tab_disable = "inline-block px-4 py-3 rounded-lg hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-800 dark:hover:text-white" %>
<div class="p-4">
  <%= form_with(model: content, class: "contents") do |form| %>
    <% if content.errors.any? %>
      <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">
        <h2><%= pluralize(content.errors.count, "error") %> prohibited this content from being saved:</h2>
        <ul>
          <% content.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    <div class="grid xl:grid-cols-3 md:grid-cols-2 gap-4">
      <!--- costo ricavo in dash--->
      <div class="my-5">
        <div class="flex items-center">
          <%= form.label :costo, class:"inline mr-2 text-red-600" %>
          <%= image_tag "https://media.dash.org/wp-content/uploads/blue-d-250.png", class: "w-6 h-6" %>
        </div>
        <%= form.number_field :costo, class: " block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", id: "valore-dash-costo", step: "0.01", min: "0"  %>
        <p class="mt-2">Valore in euro per il costo: <span id="valore-euro-costo"></span></p>
      </div>
      <div class="my-5">
        <div class="flex items-center">
          <%= form.label :ricavo, class:"text-green-600 inline mr-2" %>
          <%= image_tag "https://media.dash.org/wp-content/uploads/blue-d-250.png", class: "w-6 h-6" %>
        </div>
        <%= form.number_field :ricavo, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", id: "valore-dash-ricavo", step: "0.01" , min: "0"  %>
        <p class="mt-2">Valore in euro per il ricavo: <span id="valore-euro-ricavo"></span></p>
      </div>
      <script>
        function updateValoreEuro(idDashInput, idEuroSpan, idExchangeRate) {
          const valoreDashInput = document.getElementById(idDashInput);
          const valoreEuroSpan = document.getElementById(idEuroSpan);

          if (valoreDashInput.value.trim() === '') {
            // Se il campo Ã¨ vuoto, azzera i valori in euro e il tasso di cambio
            document.getElementById(idExchangeRate).innerHTML = '';
            valoreEuroSpan.textContent = '';
            return; // Esce dalla funzione
          }

          if (!isNaN(valoreDashInput.value)) {
            fetch('https://api.coingecko.com/api/v3/simple/price?ids=dash&vs_currencies=eur')
              .then(response => response.json())
              .then(data => {
                const exchangeRate = data.dash.eur;
                const valoreDash = parseFloat(valoreDashInput.value);
                const valoreEuro = valoreDash * exchangeRate;

                document.getElementById(idExchangeRate).innerHTML = `${exchangeRate} â‚¬`;
                valoreEuroSpan.textContent = valoreEuro.toFixed(2) + " â‚¬";
              })
              .catch(error => {
                console.error('Si Ã¨ verificato un errore durante il recupero del prezzo di Dash in Euro:', error);
              });
          } else {
            document.getElementById(idExchangeRate).innerHTML = '';
            valoreEuroSpan.textContent = '';
          }
        }

        document.addEventListener("DOMContentLoaded", function() {
          updateValoreEuro("valore-dash-costo", "valore-euro-costo", "exchangeRateCosto");
          updateValoreEuro("valore-dash-ricavo", "valore-euro-ricavo", "exchangeRateRicavo");
        });

        document.getElementById("valore-dash-costo").addEventListener("input", function() {
          updateValoreEuro("valore-dash-costo", "valore-euro-costo", "exchangeRateCosto");
        });
        document.getElementById("valore-dash-costo").addEventListener("change", function() {
          updateValoreEuro("valore-dash-costo", "valore-euro-costo", "exchangeRateCosto");
        });

        document.getElementById("valore-dash-ricavo").addEventListener("input", function() {
          updateValoreEuro("valore-dash-ricavo", "valore-euro-ricavo", "exchangeRateRicavo");
        });
        document.getElementById("valore-dash-ricavo").addEventListener("change", function() {
          updateValoreEuro("valore-dash-ricavo", "valore-euro-ricavo", "exchangeRateRicavo");
        });
      </script>
      <!-- costo ricavo in dash-->
      <div class=" ">
        <div class="my-5">
          <%= form.label :data %>
          <% if action_name == "edit" %>
            <%= form.datetime_field :data, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
          <% else %>
            <%= form.datetime_field :data, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", value: Time.now, required: true %>
          <% end %>
        </div>
      </div>
    </div>
    <div class="grid grid-cols-2 gap-4">
      <div class=" ">
        <div class="my-5">
          <%= form.label :tipo %>
          <%= form.select :tipo, options_for_select(Content.tipos.map {|k, v| [k.titleize, k]}, selected:  @content.tipo || Content.tipos.keys.first),  { prompt: "Scegli" },  class: "my-4 block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", required: true %>
        </div>
      </div>
      <div class= "">
        <div class="my-5">
          <%= form.label :visibiilitÃ  %>
          <%= form.select :visibility, options_for_select(Content.visibilities.map {|k, v| [k.titleize, k]}, selected:  @content.visibility || Content.visibilities.keys.first),  { prompt: "Scegli" },  class: "my-4 block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", required: true %>
        </div>
      </div>
    </div>
    <!------->
    <!--- Inizio radio button--->
    <div class="grid grid-cols-2 gap-4">
      <div>
        <%= form.label :energia %>
        <div class="rating gap-4">
          <% (1..5).each do |i| %>
            <%= form.radio_button :energy, i, id: "energy_#{i}", class: "emoji-radio" %>
            <%= form.label "energy_#{i}", "ðŸ˜„", class: "emoji", for: "energy_#{i}" %>
          <% end %>
        </div>
      </div>
      <div>
        <%= form.label :importanza, "What's your overall rating?" %>
        <div class="rating flex">
          <% (1..5).each do |i| %>
            <%= form.radio_button :importanza, i, id: "importanza_#{i}" %>
            <label class="star-label" for="importanza_#{i}">
              <svg class="w-6 h-6 text-gray-800 dark:text-white star" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
                <path d="M13.849 4.22c-.684-1.626-3.014-1.626-3.698 0L8.397 8.387l-4.552.361c-1.775.14-2.495 2.331-1.142 3.477l3.468 2.937-1.06 4.392c-.413 1.713 1.472 3.067 2.992 2.149L12 19.35l3.897 2.354c1.52.918 3.405-.436 2.992-2.15l-1.06-4.39 3.468-2.938c1.353-1.146.633-3.336-1.142-3.477l-4.552-.36-1.754-4.17Z"/>
              </svg>
            </label>
          <% end %>
        </div>
      </div>
    </div>
    <style>
      .star-label {
        cursor: pointer;
      }

      .star.active path {
        fill: yellow; /* Colore per le stelline attive */
      }
    </style>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const stars = document.querySelectorAll('.star-label');
        const importanzaRadioBtns = document.querySelectorAll('input[name="content[importanza]"]');

        stars.forEach(function(star, index) {
          star.addEventListener('click', function() {
            // Simula il clic sul radio button corrispondente all'importanza
            importanzaRadioBtns[index].checked = true;
            updateStars(index + 1);
          });
        });

        function updateStars(value) {
          const allStars = document.querySelectorAll('.star');

          // Rimuovi la classe 'active' da tutte le stelline
          allStars.forEach(function(star, index) {
            if (index < value) {
              star.classList.add('active');
            } else {
              star.classList.remove('active');
            }
          });
        }
      });
    </script>
    <!--- fine radio button--->
    <div class="my-5">
      <%= form.label :nome %>
      <%= form.text_field :nome, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", required: true %>
    </div>
    <div class="my-5">
      <%= form.label :descrizione %>
      <%= form.text_field :descrizione, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full", required: true %>
    </div>
    <div class="my-5">
      <%= form.label :body %>
      <%= form.text_area :body, rows: 4, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
    </div>
    <div class="my-5">
      <%= form.label :img_url %>
      <%= form.text_field :img_url, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
    </div>
    <div class="my-5">
      <%= form.label :email %>
      <%= form.text_field :email, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
    </div>
    <div class="my-5">
      <%= form.label :telefono %>
      <%= form.text_field :telefono, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
    </div>
    <br>
    <br>
    <div class="block">
      <button type="submit" class="mt-4 w-full text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300  shadow-lg shadow-green-500/50  font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">Aggiorna</button>
      <%#= form.submit "aggiorna", class: "w-full rounded-lg py-3 px-5 bg-blue-600 text-white inline-block font-medium cursor-pointer" %>
    </div>
  <% end %>
</div>
